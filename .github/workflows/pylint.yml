name: flake8
on: [push]
jobs:
  container-job:
      name: Tests
      runs-on: ubuntu-latest
      services:
        postgres:
          image: postgres
          env:
            POSTGRES_PASSWORD: test
            POSTGRES_DBNAME: postgres
            POSTGRES_USER: test
            POSTGRES_PORT: 5555
            POSTGRES_HOST: 127.0.0.1
          ports:
          - 5555:5432
      steps:
      - uses: actions/checkout@v2
      - name: Python setup
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.4"
      - name: Dependencies install and test api
        env:
            POSTGRES_PASSWORD: test
            POSTGRES_DBNAME: postgres
            POSTGRES_USER: test
            POSTGRES_PORT: 5555
            POSTGRES_HOST: 127.0.0.1
        run: |
          PGPASSWORD=test psql -h 127.0.0.1 -p 5555 -d postgres -U test -c 'create extension if not exists "uuid-ossp"; create schema meteo; create table meteo.meteodata(id uuid primary key default uuid_generate_v4(),temperature float,humidity float,pressure float,created timestamp);' 
          python3 -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          cd api
          pip install gunicorn
          python3 -m gunicorn --bind=127.0.0.1:${FLASK_PORT} app:app -w=4 --daemon
          cd ..
          cd tests
          ping 127.0.0.1 -c 4
          python3 -m pip install pytest
          pytest test_api.py
      - name: Dependencies install and test webapp
        run: |
          cd webapp
          python3 -m gunicorn --bind=127.0.0.1:${FLASK_PORT} app:app -w=4 --daemon
          cd ..
          cd tests
          pytest test_webapp.py
          
  linter_api_and_tests:
    name: linter api
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install wemake-python-styleguide
    - name: Lint with flake8
      run: |
        cd api
        flake8 app.py
        flake8 creds.py
        flake8 dbquery.py
        flake8 extras.py
        flake8 http_code.py
        flake8 coms.py
        cd ..
        cd tests
        flake8
  linter_web:
    name: linter webapp
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install wemake-python-styleguide
    - name: Lint with flake8
      run: |
        cd webapp
        flake8 app.py
        flake8 creds.py
        flake8 dbquery.py
        flake8 extras.py
        flake8 http_code.py
        flake8 data_handler.py
    